// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.747
package css

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

type FlexDirection string

const (
	FlexDirectionHorizontal FlexDirection = "row"
	FlexDirectionColumn     FlexDirection = "column"
)

type FlexAlignItems string

const (
	FlexAlignItemsStart  FlexAlignItems = "start"
	FlexAlignItemsEnd    FlexAlignItems = "end"
	FlexAlignItemsCenter FlexAlignItems = "center"
)

type FlexOptions struct {
	Gap        Spacing
	Padding    Spacing
	Direction  FlexDirection
	AlignItems FlexAlignItems
}

func fallback[T ~string](v T, f T) string {
	if v == "" {
		return string(f)
	}
	return string(v)
}

func spacing(token Spacing, fallback Spacing) templ.SafeCSSProperty {
	switch token {
	case SpacingNone:
		return "0"
	case SpacingXs:
		return "0.25rem"
	case SpacingSm:
		return "0.5rem"
	case SpacingMd:
		return "1rem"
	case SpacingLg:
		return "1.5rem"
	case SpacingXl:
		return "2rem"
	default:
		return templ.SafeCSSProperty(spacing(fallback, SpacingNone))
	}
}

func Flex(options FlexOptions) templ.CSSClass {
	templ_7745c5c3_CSSBuilder := templruntime.GetBuilder()
	templ_7745c5c3_CSSBuilder.WriteString(`display:flex;`)
	templ_7745c5c3_CSSBuilder.WriteString(string(templ.SanitizeCSS(`flex-direction`, fallback(options.Direction, FlexDirectionColumn))))
	templ_7745c5c3_CSSBuilder.WriteString(string(templ.SanitizeCSS(`gap`, spacing(options.Gap, SpacingMd))))
	templ_7745c5c3_CSSBuilder.WriteString(string(templ.SanitizeCSS(`padding`, spacing(options.Padding, SpacingNone))))
	templ_7745c5c3_CSSBuilder.WriteString(`width:100%;`)
	templ_7745c5c3_CSSID := templ.CSSID(`Flex`, templ_7745c5c3_CSSBuilder.String())
	return templ.ComponentCSSClass{
		ID:    templ_7745c5c3_CSSID,
		Class: templ.SafeCSS(`.` + templ_7745c5c3_CSSID + `{` + templ_7745c5c3_CSSBuilder.String() + `}`),
	}
}
